<div>
  <%= form_for @user, url: signup_path, html: {id: 'signup_form', role: 'form', method: :post} do |f| %>

      <h1 class="aes_heading_form"><%= t('signup.title_signup') %></h1>
      <div id="div_Warning" ></div>
      <% if @user.errors.any? %>
          <div id="div_msg_error" class="msg_error">
            <ul>
              <% @user.errors.full_messages.each do |message| %>
                  <li><%= message %></li>
              <% end %>
            </ul>
          </div>
      <% end %>
      <div class="form-group">
        <div class="row">
          <div class="col-xs-6 col-sm-6 col-md-6">
            <%= f.text_field :first_name, class: "form-control", placeholder: t('signup.lb_first_name'),:maxlength => 50 %>
          </div>
          <div class="col-xs-6 col-sm-6 col-md-6">
            <%= f.text_field :last_name, class: "form-control", placeholder: t('signup.lb_last_name'),:maxlength => 50 %>
          </div>
        </div>
      </div>

      <div class="form-group">
        <%= f.text_field :user_name, class: "form-control", placeholder: t('signup.lb_user_name'),:maxlength => 50 %>
      </div>

      <div class="form-group">
        <%= f.text_field :email, class: "form-control", placeholder: t('signup.lb_email'),:maxlength => 100 %>
      </div>

      <div class="form-group">
        <%= f.password_field :password, class: "form-control", placeholder: t('signup.lb_password') %>
      </div>

      <div class="form-group">
        <%= f.password_field :password_confirmation, class: "form-control", placeholder: t('signup.lb_password_confirmation') %>
      </div>

      <div class="row aes-btn-account">
          <button type="submit" class="btn btn-primary  btn-block" ><%= t('signup.bt_signup') %></button>
      </div>
      <div class="row form-group">
        <div class="col-xs-4 col-md-4" style="padding-right: 0px;padding-left: 15px;">
          <button type="button" class="btn btn-social-icon btn-facebook aes-btn-social" onclick="window.location.href='/auth/facebook/'"  style="border-top-right-radius: 0px; border-bottom-right-radius: 0px ">
            <i class="fa fa-facebook"></i></button>
        </div>
        <div class="col-xs-4 col-md-4" style="padding-left: 0px;padding-right: 0px">
          <button type="button" class="btn-social-icon btn-google-plus aes-btn-social" onclick="window.location.href='/auth/google_oauth2/'" style="border: none" >
            <i class="fa fa-google-plus"></i></button>
        </div>
        <div class="col-xs-4 col-md-4" style="padding-right: 15px;padding-left: 0px">
          <button type="button" class="btn btn-social-icon btn-twitter aes-btn-social" onclick="window.location.href='/auth/twitter'" style="border-bottom-left-radius: 0px;border-top-left-radius: 0px;">
            <i class="fa fa-twitter"></i></button>
        </div>
      </div>
      <div class="row aes-btn-account aes-account">
        <%= t('signin.lb_signin')%> <a href="/signin/"><%= t('signin.lk_signin')%></a>
      </div>
  <% end %>
</div>
<script>
    $(document).ready(function () {
        $("#signup_form").validate({
            onfocusout: false,
            onkeyup: false,
            rules: {
                "user[first_name]": {
                    required: {
                        depends:function(){
                            var text = $.trim($(this).val());
                            text=text.replace(/\s+/g, ' ');
                            $(this).val(text);
                            return true;
                        }
                    },
                    maxlength:50, alphanumeric:true
                },
                "user[last_name]": {
                    required: {
                        depends:function(){
                            var text = $.trim($(this).val());
                            text=text.replace(/\s+/g, ' ');
                            $(this).val(text);
                            return true;
                        }
                    },
                    maxlength:50, alphanumeric:true
                },
                "user[user_name]": {
                    required: {
                        depends:function(){
                            var text = $.trim($(this).val());
                            text=text.replace(/\s+/g, ' ');
                            $(this).val(text);
                            return true;
                        }
                    },
                    maxlength:50, alphanumeric:true, username:true
                },
                "user[email]": {
                    required: {
                        depends:function(){
                            var text = $.trim($(this).val());
                            text=text.replace(/\s+/g, ' ');
                            $(this).val(text);
                            return true;
                        }
                    },
                    custom_email: true, maxlength:100
                },
                "user[password]": {
                    required: {
                        depends:function(){
                            var text = $.trim($(this).val());
                            if (text == '') {
                                $(this).val(text);
                            }
                            return true;
                        }
                    },
                    minlength: 6},
                "user[password_confirmation]": {
                    required: {
                        depends:function(){
                            var text = $.trim($(this).val());
                            if (text == '') {
                                $(this).val(text);
                            }
                            return true;
                        }
                    },
                    minlength: 6, equalTo: "#user_password"}
            },
            messages: {
                "user[first_name]": {required: I18n.t("signup.js.validate.msg_first_name_required"),
                    maxlength: I18n.t("signup.js.validate.msg_first_name_maxlength"),
                    alphanumeric: I18n.t("signup.js.validate.msg_first_name_alphanumeric")},
                "user[last_name]": {required: I18n.t("signup.js.validate.msg_last_name_required"),
                    maxlength: I18n.t("signup.js.validate.msg_last_name_maxlength"),
                    alphanumeric: I18n.t("signup.js.validate.msg_last_name_alphanumeric")},
                "user[user_name]": {required: I18n.t("signup.js.validate.msg_user_name_required"),
                    minlength: I18n.t("signup.js.validate.msg_user_name_minlengh"),
                    maxlength: I18n.t("signup.js.validate.msg_user_name_maxlength"),
                    alphanumeric: I18n.t("signup.js.validate.msg_user_name_alphanumeric"),
                    username: I18n.t("signup.js.validate.msg_user_name_invalid")},
                "user[email]": {required: I18n.t("signup.js.validate.msg_email_required"),
                    custom_email: I18n.t("signup.js.validate.msg_email_invalid"),
                    maxlength: I18n.t('signup.js.validate.msg_email_maxlength')},
                "user[password]": {required: I18n.t("signup.js.validate.msg_password_required"),
                    minlength: I18n.t("signup.js.validate.msg_password_minlength")},
                "user[password_confirmation]": {required: I18n.t("signup.js.validate.msg_password_confirmation_required"),
                    minlength: I18n.t("signup.js.validate.msg_password_confirmation_minlength"),
                    equalTo: I18n.t("signup.js.validate.msg_password_confirmation_equalto")}

            },
            errorPlacement: function (error, element) {
                error.insertAfter(element);
            },
/*            submitHandler: function (form) {
                $('#signup_form').find('input:text').each(function(){
                    var text = $.trim($(this).val());
                    text=text.replace(/\s+/g, ' ');
                    $(this).val(text);
                });
                form.submit();
            },*/
            invalidHandler: function(form, validator) {
                $('#div_msg_error').text('');

                var errors = validator.numberOfInvalids();
                if (errors) {
                    validator.errorList[0].element.focus();
                }
            }
        });

    });
</script>
