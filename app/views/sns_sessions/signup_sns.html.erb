<div class="signuppanel">
  <%= form_for @user, url: signup_sns_path, html: {id: 'signup_sns_form', role: 'form', method: :post} do |f| %>
      <fieldset>
        <h1 class="aes_heading_form"><%= t('signup.title_update_account') %></h1>

        <% if @user.errors.any? %>
            <div id="msg_error" class="msg_error">
              <ul>
                <% @user.errors.full_messages.each do |message| %>
                    <li><%= message %></li>
                <% end %>
              </ul>
            </div>
        <% end %>

        <%= f.fields_for :sns_accounts do |f_sns_account| %>
            <%= f_sns_account.hidden_field :provider %>
            <%= f_sns_account.hidden_field :uid %>
            <%= f_sns_account.hidden_field :user_name %>
            <%= f_sns_account.hidden_field :first_name %>
            <%= f_sns_account.hidden_field :last_name %>
            <%= f_sns_account.hidden_field :email %>
            <%= f_sns_account.hidden_field :image_url %>
            <%= f_sns_account.hidden_field :access_token %>
        <% end %>


        <div class="row">
          <div class="col-xs-12 col-sm-6 col-md-6">
            <div class="form-group">
              <%= f.label t('signup.lb_first_name') %>
              <%= f.text_field :first_name, class: "form-control input-lg", placeholder: t('signup.lb_first_name'),:maxlength => 50  %>
            </div>
          </div>
          <div class="col-xs-12 col-sm-6 col-md-6">
            <div class="form-group">
              <%= f.label t('signup.lb_last_name') %>
              <%= f.text_field :last_name, class: "form-control input-lg", placeholder: t('signup.lb_last_name') ,:maxlength => 50 %>
            </div>
          </div>
        </div>

        <div class="form-group">
          <%= f.label t('signup.lb_user_name') %>
          <%= f.text_field :user_name, class: "form-control input-lg", placeholder: t('signup.lb_user_name'),:maxlength => 50  %>
        </div>

        <div class="form-group">
          <%= f.label t('signup.lb_email') %>
          <%= f.text_field :email, class: "form-control input-lg", placeholder: t('signup.lb_email') ,:maxlength => 100 %>
        </div>

        <div class="actions">
          <%= f.submit t('signup.bt_signup'), class: "btn btn-primary" %>
        </div>

      </fieldset>
  <% end %>
</div>

<script>
    $(document).ready(function () {
        $("#signup_sns_form").validate({
            onfocusout: false,
            onkeyup: false,
            rules: {
                "user[first_name]": {
                    required: {
                        depends:function(){
                            var text = $.trim($(this).val());
                            text=text.replace(/\s+/g, ' ');
                            $(this).val(text);
                            return true;
                        }
                    },
                    maxlength:50, alphanumeric:true
                },
                "user[last_name]": {
                    required: {
                        depends:function(){
                            var text = $.trim($(this).val());
                            text=text.replace(/\s+/g, ' ');
                            $(this).val(text);
                            return true;
                        }
                    },
                    maxlength:50, alphanumeric:true
                },
                "user[user_name]": {
                    required: {
                        depends:function(){
                            var text = $.trim($(this).val());
                            text=text.replace(/\s+/g, ' ');
                            $(this).val(text);
                            return true;
                        }
                    },
                    maxlength:50, alphanumeric:true, username:true
                },
                "user[email]": {
                    required: {
                        depends:function(){
                            var text = $.trim($(this).val());
                            text=text.replace(/\s+/g, ' ');
                            $(this).val(text);
                            return true;
                        }
                    },
                    custom_email: true,maxlength:100
                }
            },
            messages: {
                "user[first_name]": {required: I18n.t("signup.js.validate.msg_first_name_required"),
                    maxlength: I18n.t("signup.js.validate.msg_first_name_maxlength"),
                    alphanumeric: I18n.t("signup.js.validate.msg_first_name_alphanumeric")},
                "user[last_name]": {required: I18n.t("signup.js.validate.msg_last_name_required"),
                    maxlength: I18n.t("signup.js.validate.msg_last_name_maxlength"),
                    alphanumeric: I18n.t("signup.js.validate.msg_last_name_alphanumeric")},
                "user[user_name]": {required: I18n.t("signup.js.validate.msg_user_name_required"),
                    minlength: I18n.t("signup.js.validate.msg_user_name_minlength"),
                    maxlength: I18n.t("signup.js.validate.msg_user_name_maxlength"),
                    alphanumeric: I18n.t("signup.js.validate.msg_user_name_alphanumeric"),
                    username: I18n.t("signup.js.validate.msg_user_name_invalid")},
                "user[email]": {required: I18n.t("signup.js.validate.msg_email_required"),
                    custom_email: I18n.t("signup.js.validate.msg_email_invalid"),
                maxlength: I18n.t('signup.js.validate.msg_email_maxlength')}
            },
            errorPlacement: function (error, element) {
                error.insertAfter(element);
            },
/*            submitHandler: function (form) {

                $('#signup_sns_form').find('input:text').each(function(){
                    var text = $.trim($(this).val());
                    text=text.replace(/\s+/g, ' ');
                    $(this).val(text);
                });
                form.submit();

            },*/
            invalidHandler: function(form, validator) {
                $('#div_msg_error').text('');

                var errors = validator.numberOfInvalids();
                if (errors) {
                    validator.errorList[0].element.focus();
                }
            }
        });
    });
</script>