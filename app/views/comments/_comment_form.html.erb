<% if @object.nil? && @curriculum %>
    <% @object = @curriculum %>
<% end %>

<%= form_tag comments_create_path, name: 'comment-form', id: 'comment-form', role: 'form', method: :post do %>
    <p id="comment-error" class="has-error help-block"></p>
    <div class="form-group">
      <div class="row">
        <div class="col-md-12">
          <%= text_area_tag "comment", params[:comment], placeholder: t('comments.ph_enter_comment'), class:"form-control aes-input", rows: "2", maxlength: "5000"%>
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col-md-12">
        <div style="float: left;width: 70%;padding-top: 10px">
          <!--All comment-->
          <h4 class="aes-color" id="comments-count"><%= t('comments.lb_all_comments') %>&#40;<%= @object.get_total_comments%>&#41;</h4>
          <!--End all comment-->
        </div>
        <div style="float: right;width: 30%;text-align: right" >
          <button id="submit-comment" class="btn btn-primary" type="submit"> <%=t('comments.btn_submit_comment')%> </button>
        </div>
      </div>
    </div>
    <input type="hidden" id="object_id" name="object_id" value="<%= @object.id %>">
    <input type="hidden" id="object_type" name="object_type" value="<%= @object.object_type %>">
<% end %>

<script>
    $(document).ready(function () {
        $("#comment-form").validate({
            onfocusout: false,
            onkeyup: false,
            rules: {
                "comment": {required: {
                    depends:function(){
                        var text = $.trim($(this).val());
//                        text = text.replace("\n", "<br />")
//                        text=text.replace(/\s+/g, ' ');
                        $(this).val(text);
                        return true;
                    }
                }, maxlength: 5000}
            },
            messages: {
                "comment": {required: I18n.t('js.validate.msg_required'), maxlength: I18n.t('js.validate.msg_maxlength')}
            },
            errorPlacement: function (error, element) {
                error.insertAfter(element);
            },
            submitHandler: function (form) {
                $.ajax({
                    type: "POST",
                    url: "/comments/create",
                    data: {
                        object_id: $('#object_id').val(),
                        object_type: $('#object_type').val(),
                        comment: $("#comment").val()
                    },
                    beforeSend: function (xhr) {
                        $.loader.open({imgUrl: "<%= asset_path('assets/template/ajaxloader/images/loading16x16.gif') %>"});
                    },
                    success: function (data) {
//                        bindSubmitReplyForm();
                        $.loader.close(true);
                    },
                    error: function(xhr, status, response) {
                        console.log("AJAX Error: " + status);
                        $.loader.close(true);
                    }
                });

            },
            invalidHandler: function (form, validator) {
                $('#div_msg_error').text('');

                var errors = validator.numberOfInvalids();
                if (errors) {
                    validator.errorList[0].element.focus();
                }
            }
        });

    })
</script>